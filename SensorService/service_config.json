{
	"stage": "Production",
	"Development": {
		"dataPath": "./data/",
		"samplePrefix": "user_",
		"sampleExtension": ".csv",
		"sensorsRange": {
			"From": 0,
			"To": 2
		},
		"readInterval": 10000,
		"listeningPort": 5005,
		"sensorNamePrefix": "sensor_",
		"registerSensorDelay": 2000,
		"registryAddress": "localhost",
		"registryPort": 5002,
		"registerSensorPath": "sensor/registry/registerSensor",
		"unregisterSensorPath": "sensor/registry/unregisterSensor",
		"updateSensorPath": "sensor/registry/updateSensor",
		"sensorNameField": "sensorName",
		"sensorAddrField": "sensorAddr",
		"portNumField": "portNum",
		"readIndexField": "lastReadIndex",
		"consoleLogLevel": "message|error",
		"logErrorLevel": "error",
		"logMessageLevel": "message",
		"logErrorDest": "/error_log",
		"logMsgDest": "/msg_log",
		"brokerAddress": "localhost",
		"brokerPort": 5672,
		"serviceLogTopic": "service_log",
		"sensorLogFilter": "sensor",
		"brokerLifetimeTopic": "service_lifetime",
		"sensorReaderEventTopic": "sensor_reader",
		"sensorReadEventFilter": "read_event",
		"brokerConfigTopic": "config",
		"brokerConfigFilter": "reader"
	},
	"Production": {
		"dataPath": "/data/",
		"samplePrefix": "user_",
		"sampleExtension": ".csv",
		"sensorsRange": {
			"From": 55,
			"To": 60
		},
		"readInterval": 2000,
		"listeningPort": 5000,
		"sensorNamePrefix": "sensor_",
		"registerSensorDelay": 5000,
		"registryAddress": "soa-registry",
		"registryPort": 5000,
		"registerSensorPath": "sensor/registry/registerSensor",
		"updateSensorPath": "sensor/registry/updateSensor",
		"unregisterSensorPath": "sensor/registry/unregisterSensor",
		"sensorNameField": "sensorName",
		"sensorAddrField": "sensorAddr",
		"portNumField": "portNum",
		"readIndexField": "lastReadIndex",
		"consoleLogLevel": "message",
		"logMessageLevel": "message",
		"logErrorLevel": "error",
		"logErrorDest": "/error_log",
		"logMsgDest": "/msg_log",
		"brokerAddress": "soa-broker",
		"brokerPort": 5672,
		"serviceLogTopic": "service_log",
		"sensorLogFilter": "sensor",
		"brokerLifetimeTopic": "service_lifetime",
		"sensorReaderEventTopic": "sensor_reader",
		"sensorReadEventFilter": "read_event",
		"brokerConfigTopic": "config",
		"brokerConfigFilter": "reader"
	}
}