version: '3.5'

networks:
  default:
    name: soa-network
    external: true

# ===============================

services:
  soa-mongo-db:
    container_name: soa-mongo-db
    image: mongo:latest
    volumes:
        - /home/nemanja/soa_mongo_data:/data/db
    ports:
    - "0.0.0.0:27017:27017"

  soa-broker:
    container_name: soa-broker
    image: rabbitmq:3.8-management
    ports: 
    - "0.0.0.0:5672:5672"
    - "0.0.0.0:15672:15672"

  soa-sensor:
    build:
      context: ./
      dockerfile: ./dockerfiles/Dockerfile.SensorService
    image: soa/sensor-service
    volumes: 
      - /home/nemanja/soa_data:/data
    ports:
    - "5001:5000"

  soa-registry:
    container_name: soa-registry
    build:
      context: ./
      dockerfile: ./dockerfiles/Dockerfile.SensorRegistry
    image: soa/sensor-registry
    ports:
    - "5002:5000"

  soa-collector:
    container_name: soa-collector
    build:
      context: ./
      dockerfile: ./dockerfiles/Dockerfile.CollectorService
    image: soa/collector-service
    # deopoy can only be used in swarm ... 
    # deploy:
    #   resources:
    #     limits:
    #       memory: 200M
    ports:
    - "5003:5000"

  soa-service-observer:
    container_name: soa-service-observer
    build:
      context: ./
      dockerfile: ./dockerfiles/Dockerfile.ServiceObserver
    image: soa/service-observer
    ports:
    - "5004:5000"
  
  soa-data-observer:
    container_name: soa-data-observer
    build:
      context: ./
      dockerfile: ./dockerfiles/Dockerfile.DataObserver
    image: soa/data-observer
    ports:
      - "5005:5000"
      
  soa-tboard-rabbit-adapter:
    container_name: soa-tboard-rabbit-adapter
    build:
      context: ./
      dockerfile: ./dockerfiles/Dockerfile.TBoardRabbitAdapter.Prod
    image: soa/tboard-rabbit-adapter
    # this wont actually help beacuse this is gonna be used once container is started
    # problem is how to speed up build stage
    # volumes:
    #   - /home/nemanja/.m2:/root/.m2

  soa-thingsboard:
    container_name: soa-thingsboard
    # restart: always # will start container with every docker startup
    image: "thingsboard/tb-postgres"
    ports:
      - "8081:9090"
      - "1884:1883"
      - "5684:5683/udp"
    environment:
      TB_QUEUE_TYPE: rabbitmq
      TB_QUEUE_RABBIT_MQ_USERNAME: "guest"
      TB_QUEUE_RABBIT_MQ_PASSWORD: "guest"
      TB_QUEUE_RABBIT_MQ_HOST: "soa-broker"
      TB_QUEUE_RABBIT_MQ_PORT: 5672
    volumes:
      - /home/nemanja/soa_tboard_data:/data
      # - ~/.mytb-logs:/var/log/thingsboard
    
  soa-thingsboard-gateway:
    container_name: soa-thingsboard-gateway
    build:
      context: /
      dockerfile: ./dockerfiles/Dockerfile.TBoardGateway
    image: soa/thingsboard-gateway
    # image: thingsboard/tb-gateway
    volumes:
      - /home/nemanja/workspace/soa/DashboardClient/TBoardGateway/extensions:/thingsboard_gateway/extensions
      - /home/nemanja/workspace/soa/DashboardClient/TBoardGateway/config:/thingsboard_gateway/config
